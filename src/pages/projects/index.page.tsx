import AuthButton from "@components/AuthButton";
import Head from "next/head";
import { trpc } from "@services/trpc";
import { Button } from "@styles/common";
import * as styles from "./styles";
import Spinner from "@components/Icons/Spinner";
import { NextPageWithLayout } from "@types";
import ProjectsList from "@components/Lists/ProjectsList";
import {
  CurrentUserContextInterface,
  CurrentUserContext,
} from "@components/Providers/currentUser";
import { useContext } from "react";

const Projects: NextPageWithLayout = () => {
  const utils = trpc.useContext();
  const { currentUser } =
    useContext<CurrentUserContextInterface>(CurrentUserContext);

  const addProject = trpc.useMutation("projects.add", {
    async onSuccess() {
      return await utils.invalidateQueries(["projects.all"]);
    },
  });

  const addProjectHandler = () => {
    if (currentUser) {
      return addProject.mutate({
        name: "Template text",
        description: "Template text description.",
        ownerId: currentUser.id as string,
      });
    }
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <styles.Main>
        <styles.Title>Projects page</styles.Title>
        {currentUser && (
          <>
            <Button onClick={addProjectHandler}>
              {addProject.isLoading && <Spinner />}
              Add new project
            </Button>
            <ProjectsList ownerId={currentUser.id} />
          </>
        )}
        <AuthButton />
      </styles.Main>
    </div>
  );
};

export default Projects;
